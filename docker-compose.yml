version: "3.8"


services:
  postgres:
    image: postgres:15
    container_name: notification_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: notification_db
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-schema.sql:/docker-entrypoint-initdb.d/init-schema.sql
    networks:
      - notification-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d notification_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    container_name: notification_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - notification-net

  # Your Notification Audit Service Application
  audit-service:
    build: .
    container_name: notification_audit_service
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notification_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: audit

      # --- RabbitMQ Configuration ---
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
    networks:
      - notification-net

# Network for services to communicate
networks:
  notification-net:
    driver: bridge

# Named volumes for data persistence
volumes:
  postgres-data:
  rabbitmq-data: